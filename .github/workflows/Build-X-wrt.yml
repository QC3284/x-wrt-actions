#本仓库及文件只在Github发布
#作者：QC3284@github.com(https://github.com/QC3284)
#本仓库地址：https://github.com/QC3284/x-wrt-actions

name: 编译X-wrt (Compile X-wrt)

on:
  schedule:
    - cron: 0 3 * * 2,4,6
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: "Dont care, and don't touch it!"
        required: true
        default: 'false'

env:
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo Start
        sleep 3
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo Done
        
    - name: 安装必要软件包 (Installation of necessary packages)
      run: |
        echo Start
        echo $(uname -a) 
        sleep 5
        sudo apt-get update
        sudo apt update
        sudo apt upgrade -y
        sudo apt update
        sudo apt install build-essential ecj fastjar file flex g++ gcc-multilib g++-multilib gawk gettext git git-core java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev swig python3 python3-dev python3-distutils python3-pyelftools subversion unzip wget zlib1g-dev rsync qemu-utils zip -y
        sudo apt-get update
        sudo apt-get install -y libfuse-dev neofetch 7zip
        sudo apt update
        sudo apt full-upgrade -y
        echo Done
        sleep 10

    - name: 拉取源码 (Pulling the source code)
      working-directory: /workdir
      run: |
        df -hT $PWD 
        git clone https://github.com/x-wrt/x-wrt.git openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        git pull
        git fetch origin
        git fetch origin --tags
        git checkout -f 24.04_b202408151500
        
    - name: 拉取插件 (Pull plug-in)
      run: |
        cd openwrt/package/
        git clone https://github.com/garypang13/luci-theme-edge.git
        git clone https://github.com/jerrykuku/luci-theme-argon.git
        git clone https://github.com/jerrykuku/luci-app-argon-config.git
        git clone https://github.com/sirpdboy/luci-theme-opentopd.git
        git clone https://github.com/derisamedia/luci-theme-alpha.git
        git clone https://github.com/derisamedia/luci-app-alpha-config.git
        git clone https://github.com/f8q8/luci-app-filetransfer.git
        git clone https://github.com/kongfl888/luci-app-timedreboot.git
        git clone https://github.com/sirpdboy/luci-app-netdata.git
        git clone https://github.com/zzsj0928/luci-app-pushbot.git
        git clone https://github.com/animegasan/luci-app-wolplus.git
        git clone https://github.com/sirpdboy/luci-app-eqosplus.git
        git clone https://github.com/sirpdboy/luci-app-ddns-go.git ddns-go
        git clone https://github.com/QC3284/coremark-openwrt.git utils/coremark
        
    - name: 下载横幅 (Download banner)
      run: |
        cd openwrt/package/base-files/files/etc/
        sudo rm -rf banner
        ls
        wget https://raw.githubusercontent.com/QC3284/openwrt-actions-config/main/x-wrt-banner.txt -O banner

#    - name: 加载自定义 Feed源和更新Feed-01
#      run: |
#         cd openwrt
#         sed -i 's/192.168.15.1/192.168.5.1/g' package/base-files/files/bin/config_generate
#         sed -i '1i src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
#         sed -i '2i src-git small https://github.com/kenzok8/small' feeds.conf.default
#         ./scripts/feeds update -a && sudo rm -rf feeds/luci/applications/luci-app-mosdns && sudo rm -rf feeds/kenzo/luci-app-smartdns && sudo rm -rf feeds/luci/applications/luci-app-smartdns
#         sudo rm -rf feeds/packages/net/{alist,adguardhome,mosdns,xray*,v2ray*,v2ray*,sing*,smartdns}
#         sudo rm -rf feeds/packages/utils/v2dat
#         sudo rm -rf feeds/packages/lang/golang
#         git clone https://github.com/kenzok8/golang feeds/packages/lang/golang
#         git clone https://github.com/pymumu/openwrt-smartdns feeds/packages/net/smartdns
#         git clone https://github.com/pymumu/luci-app-smartdns feeds/luci/applications/luci-app-smartdns

    - name: 更新Feed (Update Feed)
      run: |
        cd openwrt
        sed -i 's/192.168.15.1/192.168.5.1/g' package/base-files/files/bin/config_generate
        ./scripts/feeds update -a
        sudo rm -rf feeds/packages/net/smartdns
        sudo rm -rf feeds/luci/applications/luci-app-smartdns
        git clone https://github.com/pymumu/openwrt-smartdns.git  feeds/packages/net/smartdns
        git clone https://github.com/pymumu/luci-app-smartdns.git feeds/luci/applications/luci-app-smartdns
    
    - name: 安装Feed (Install Feed)
      run: |
         cd openwrt
         ./scripts/feeds install -a
         df -hT $PWD

    - name: 下载配置 (Download Config (.config))
      run: |
         cd openwrt
         curl https://raw.githubusercontent.com/QC3284/openwrt-actions-config/main/x-wrt-actions-004.config -o .config
         echo " 下载完成 (Download complete)"

    - name: 下载包 (Download package (dl library))
      run: |
         sudo neofetch
         cd openwrt
         make download -j8
         find dl -size -1024c -exec ls -l {} \;
         find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件 (Compile Firmware)
      run: |
         cd openwrt
         sudo neofetch
         make -version
         gcc --version | head -n1
         sleep 10
         echo "开始编译"
         echo -e "$(nproc) thread compile"
         make -j$(nproc)  || make -j4 V=s || make -j4 V=99
         echo "status=success" >> $GITHUB_STATE
         grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
         [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
         echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
         echo "压缩bin目录...... (Compressing bin directories ......)"
         7zz a -m0=lzma2 -mx=9 -mmt=8 bin.zip bin
         mv bin.zip bin/targets/ramips/mt7621/
         cd bin/targets/ramips/mt7621/
         curl http://downloads.pangubox.com:6380/lintel/CR660X/pb-boot/pb-boot.ecc -o pb-boot.ecc || curl https://raw.githubusercontent.com/QC3284/openwrt-actions-config/main/pb-boot-cr660x-back/pb-boot.ecc -o pb-boot.ecc
         curl http://downloads.pangubox.com:6380/lintel/CR660X/pb-boot/pb-boot.img -o pb-boot.img || curl https://raw.githubusercontent.com/QC3284/openwrt-actions-config/main/pb-boot-cr660x-back/pb-boot.img -o pb-boot.img
         curl http://downloads.pangubox.com:6380/lintel/CR660X/pb-boot/pb-boot.sha256 -o pb-boot.sha256 || curl https://raw.githubusercontent.com/QC3284/openwrt-actions-config/main/pb-boot-cr660x-back/pb-boot.sha256 -o pb-boot.sha256
         echo "完成 (Finished.)"

    - name: 检查空间使用情况 (Check space usage)
      if: (!cancelled())
      run: df -hT

    - name:  上传bin目录 (Upload bin directory)
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理文件 (Sort out documents)
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件目录 (Uploading Firmware Directory)
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 生成发布标签 (Generate publish tags)
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "自动编译 (Automatic compilation)" >> release.txt
        echo "使用源码 (Use source code)：" >> release.txt
        echo "[x-wrt](https://github.com/x-wrt/x-wrt)" >> release.txt
        echo "使用标签 (Use tags)" >> release.txt
        echo "24.04_b202408031649" >> release.txt
        echo "默认账号/密码 (Default account/password)：" >> release.txt
        echo "admin/admin" >> release.txt
        echo "SSH默认账号/密码 (Default SSH account/password)：" >> release.txt
        echo "root/admin" >> release.txt
        echo "注：" >> release.txt
        echo "- factory.bin 通常用于从原厂固件或Uboot中刷入"  release.txt
        echo "- sysupgrade.bin 通常用于web升级" >> release.txt
        echo "- initramfs-kernel.bin 具有最少文件系统的Linux内核. 对于首次安装或恢复很有用" >> release.txt
        echo "- sha256sums 是校验文件" >> release.txt
        echo "- PB-Boot适用于Xiaomi CR6608/CR6609/CR6606"  release.txt
        echo "- pb-boot.img 是pb-boot(bootloader)文件" >> release.txt
        echo "- pb-boot.sha256是pb-boot的校验文件" >> release.txt
        echo "- pb-boot.ecc是带OOB数据用于nand编程器的pb-boot(bootloader)" >> release.txt
        echo "- 此pb-boot(bootloader)会从NAND Flash的0x200000读取uImage,目前不支持FitImage!!!" >> release.txt
        echo "- 固件结构应该为: uImage+UBI镜像" >> release.txt
        echo "- 如果发现本次编译没有文件，说明正在调整插件和更新（也有可能是源码炸了）" >> release.txt
        echo "- 如果发现更新频繁，尽量不要下载（可能正在调整插件）" >> release.txt
        echo "- 此固件基于[X-WRT](https://github.com/x-wrt/x-wrt)源码编译，加入了一些插件，如需下载官方原版，请到：" >> release.txt
        echo "[X-WRT/OpenWrt/LEDE 固件下载](https://downloads.x-wrt.com/rom)" >> release.txt
        echo "- 本仓库禁止克隆到[GitCode](https://gitcode.com)" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件以发布 (Upload firmware for release)
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
     
    - name: 删除工作流运行 (Delete workflow run)
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: 删除旧版本 (Delete old version)
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 6
        delete_tags: flase
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
